import csv
import os

def filter_csv_files_in_folder(folder_path, output_folder, reference_masses):
    try:
        folder_path = folder_path.strip('"')  # Remove quotes from copied paths
        output_folder = output_folder.strip('"')
        
        if not os.path.exists(output_folder):
            os.makedirs(output_folder)  # Create output folder if it doesn't exist
        
        for file_name, reference_mass in reference_masses.items():
            file_path = os.path.join(folder_path, file_name)
            if not os.path.isfile(file_path):
                print(f"Skipping {file_name}: File not found.")
                continue
            
            filtered_rows = []

            # Below is the range of the filter, if another value different from 30% is used, change it bwelow
            lower_bound = reference_mass * 0.7  # -30%
            upper_bound = reference_mass * 1.3  # +30%
            
            with open(file_path, mode='r', newline='') as file:
                reader = csv.reader(file, delimiter=';')  # Use semicolon as delimiter (since it's a csv file, if another version is been used, change it here)
                header = next(reader, None)  # Read the header if present
                
                if header:
                    filtered_rows.append(header)
                
                for row in reader:
                    if len(row) >= 10:  # Ensure the row has at least 10 columns
                        try:
                            value = float(row[9].replace(',', '.'))  # Convert 10th column to float also here we make the changes from commas to dots
                            if lower_bound <= value <= upper_bound:
                                filtered_rows.append(row)
                        except ValueError:
                            print(f"Skipping row with invalid numeric value in 10th column: {row}")
                    else:
                        print("Skipping row with insufficient columns")
            
            output_file_name = file_name.replace(".csv", "_filtered.csv")
            output_file_path = os.path.join(output_folder, output_file_name)
            
            with open(output_file_path, mode='w', newline='') as file:
                writer = csv.writer(file, delimiter=';')
                writer.writerows(filtered_rows)
            
            print(f"Filtered CSV saved as: {output_file_path}")
    except Exception as e:
        print(f"An error occurred: {e}")

# inputs here
folder_path = input("Enter the folder path containing CSV files: ")
output_folder = input("Enter the output folder path: ")
num_files = int(input("Enter the number of files: "))
reference_masses = {}
for _ in range(num_files):
    file_name = input("Enter file name: ")
    reference_mass = float(input(f"Enter the reference mass for {file_name}: "))
    reference_masses[file_name] = reference_mass

filter_csv_files_in_folder(folder_path, output_folder, reference_masses)